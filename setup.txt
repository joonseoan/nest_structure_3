1. next new di_3 (creating a new project)
2. In terminal, create modules

  nest g module computer
  nest g module cpu 
  nest g module disk
  nest g module power

3. In terminal, create 3 services

  nest g service cpu 
  nest g service disk
  nest g service power

4. In terminal, create a controller

  nest g controller computer

// So a computer controller with module, and 3 services with modules

5. It should bottoms up approach.
  . The last dependency power
  . The mid disk and cpu
  . The highest level is computer which is a module

6. Sharing service to the parent class.
  1) The last child: PowerModule

  [service]

    import { Injectable } from '@nestjs/common';

    @Injectable()
    export class PowerService {
      supplyPower(watts: number) {
        console.log(`Supplying ${watts} worth of power`);
      }
    }
  
  [module]

    import { Module } from '@nestjs/common';
    import { PowerService } from './power.service';

    // decorator to use PowerService

    @Module({
      // providers is to use the PowerService in PowerModule
      providers: [PowerService],
      // now we can share PowerService to be used in other modules like CPUModule.
      exports: [PowerService],
    })
    export class PowerModule {}

  2) CPUModule: parent

  [service]

    import { Injectable } from '@nestjs/common';
    // import PowerService
    import { PowerService } from 'src/power/power.service';

    @Injectable()
    export class CpuService {
      // Declare service in the constructor
      constructor(private powerService: PowerService) {}

      compute(a: number, b: number) {
        console.log('Drawing 10 watts of power from Power Service.');

        this.powerService.supplyPower(10);

        return a + b;
      }
    }

  [module]

    import { Module } from '@nestjs/common';
    import { CpuService } from './cpu.service';
    import { PowerModule } from 'src/power/power.module';

    @Module({
      // In order to use "PowerModule" and its service including PowerService in CPUModule
      imports: [PowerModule],
      providers: [CpuService],
    })
    export class CpuModule {}